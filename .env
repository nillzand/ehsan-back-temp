# back/.env

# SECURITY: Generate a new, strong secret key for production
# You can generate one with: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
#SECRET_KEY='your-production-secret-key-goes-here'
# Set to 'False' in production for security and performance
#DEBUG= True

# Replace with your backend's actual domain name
#ALLOWED_HOSTS='localhost,127.0.0.1'

# Replace with your frontend's actual domain name (NO trailing slash)
#CORS_ALLOWED_ORIGINS='http://localhost:8000,http://localhost:3000'
#CSRF_TRUSTED_ORIGINS='http://localhost:8000,http://localhost:3000'

# Example PostgreSQL connection string for production
# DATABASE_URL='postgres://user:password@postgres_host:5432/dbname'

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY='django-insecure-your-secret-key-for-development'

# Set DEBUG to 'False' for production, 'True' for development
DEBUG='False'

# --- HOSTS AND ORIGINS ---
# Add your frontend and backend domains here, separated by commas
ALLOWED_HOSTS='ehsan-restaurant.nilva.ai,localhost,127.0.0.1'
CORS_ALLOWED_ORIGINS='https://ehsan-restaurant.nilva.ai,http://localhost:5173'
CSRF_TRUSTED_ORIGINS='https://ehsan-restaurant.nilva.ai,http://localhost:5173'

# --- DATABASE CONFIGURATION ---
# The full connection string for your PostgreSQL database
DATABASE_URL='postgres://ensan_restaurant:UniNTOREDiAnAtEntUMF@26456e38-b199-4838-95a2-a095ed2e9cbf.hsvc.ir:32181/ensan_restaurant_db'